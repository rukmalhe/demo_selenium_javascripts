// Generated by Selenium IDE - Refactored
const { Builder, By, until } = require('selenium-webdriver')
const assert = require('assert')

/**
 * Reusable login helper
 */
async function fillAndSubmitLoginForm(driver, username, password) {
  const usernameField = await driver.wait(until.elementLocated(By.id("userName")), 5000)
  await driver.wait(until.elementIsVisible(usernameField), 5000)
  await usernameField.clear()
  await usernameField.sendKeys(username)

  const passwordField = await driver.wait(until.elementLocated(By.id("password")), 5000)
  await driver.wait(until.elementIsVisible(passwordField), 5000)
  await passwordField.clear()
  await passwordField.sendKeys(password)

  const loginBtn = await driver.wait(until.elementLocated(By.css(".btn-1")), 5000)
  await driver.wait(until.elementIsVisible(loginBtn), 5000)
  await loginBtn.click()
}

describe('Add Vacancy', function () {
  this.timeout(30000)
  let driver
  let vars

  beforeEach(async function () {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })

  afterEach(async function () {
    await driver.quit()
  })

  it('Add Vacancy', async function () {
    await driver.get("http://localhost:8888/login")
    await driver.manage().window().setRect({ width: 1280, height: 800 })

    vars["USERNAME"] = "rukmal"
    vars["PASSWORD"] = "password"
    vars["COMPANY_NAME"] = "mSupply"
    vars["VACANCY_DETAIL"] = `Would you like to do something different? Ideally something that makes for a better world? Us too...`
    vars["RATE"] = "$65-$70"

    // Login using helper function
    await fillAndSubmitLoginForm(driver, vars["USERNAME"], vars["PASSWORD"])

    // Navigate to Add Vacancy
    const addVacancyLink = await driver.wait(until.elementLocated(By.linkText("Add Vacancy")), 5000)
    await addVacancyLink.click()

    // Verify page loaded
    const heading = await driver.findElement(By.css(".intro-feature")).getText()
    assert(heading === "Add Vacancy")

    // Fill form
    await driver.findElement(By.id("CompanyName")).sendKeys(vars["COMPANY_NAME"])
    await driver.findElement(By.id("VacancyDescription")).sendKeys(vars["VACANCY_DETAIL"])

    // File upload
    const fileInput = await driver.findElement(By.id('add-vacancy-photo'));
    await fileInput.sendKeys('/Users/rukmal/Local Sites/job-agency-service/public/images/Fallback.jpg');
    console.log('✅ File sent to input. Waiting for Cloudinary preview...');

    // Wait for Cloudinary response & img to render
    const previewImg = await driver.wait(until.elementLocated(By.css("#photo-preview img")), 10000);
    const imgSrc = await previewImg.getAttribute("src");

    // Final Assertions
    assert(imgSrc.includes("res.cloudinary.com/dnf2dypvu/image/upload"), "❌ Cloudinary image not previewed.");
    console.log("✅ Image preview success with src:", imgSrc);



    // Dates
    await driver.findElement(By.id("published-date-vacancy")).sendKeys("2025-11-30")
    await driver.findElement(By.id("expiry-date-vacancy")).sendKeys("2025-11-30")

    // Dropdown select
    const businessDropdown = await driver.findElement(By.id("Business"))
    await businessDropdown.findElement(By.xpath("//option[. = 'Office']")).click()

    // Rate
    await driver.findElement(By.id("PayRate")).sendKeys(vars["RATE"])

    // Submit form
    await driver.findElement(By.id("submit-btn")).click()
  })
})
